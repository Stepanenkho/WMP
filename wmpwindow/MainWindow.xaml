<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:WMPWindow_Properties="clr-namespace:WMPWindow.Properties" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" mc:Ignorable="d" x:Class="WMPWindow.MainWindow"
        Title="Windows Media Player Originalz" Height="600" Width="1200" Closing="MainWindow_Closing" MinHeight="150" MinWidth="1000" Background="Black" Icon="autobots.ico">
    
    <Window.Resources>
        <ResourceDictionary >
            <ImageSource x:Key="Button_Play" >Play.png</ImageSource>
            <ImageSource x:Key="Button_Pause">Pause.png</ImageSource>
            <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            	<GradientStop Color="white" Offset="0"/>
            	<GradientStop Color="#B8E2F9" Offset="0.5"/>
            	<GradientStop Color="#B0DFF8" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder" Color="#3C7FB1"/>
            <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            	<GradientStop Color="#B8E4FA" Offset="0.25"/>
            	<GradientStop Color="#5EB4E3" Offset="0.5"/>
            	<GradientStop Color="#4C8BB4" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder" Color="#2C628B"/>
            <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
            <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
            <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
            <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            	<GradientStop Color="White" Offset="0"/>
            	<GradientStop Color="#F0EFEF" Offset="0.4"/>
            	<GradientStop Color="#D6D5D5" Offset=".8"/>
            </LinearGradientBrush>
            <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>
            <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="Height" Value="18"/>
            	<Setter Property="Width" Value="10"/>
            	<Setter Property="Foreground" Value="Gray"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Thumb}">
            				<Canvas SnapsToDevicePixels="true">
            					<Canvas.RenderTransform>
            						<TransformGroup>
            							<TransformGroup.Children>
            								<TransformCollection>
            									<RotateTransform Angle="180"/>
            									<TranslateTransform X="5" Y="9"/>
            								</TransformCollection>
            							</TransformGroup.Children>
            						</TransformGroup>
            					</Canvas.RenderTransform>
            					<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted}"/>
            					<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
            					<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
            				</Canvas>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="Foreground" Value="Blue">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="IsDragging" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
            						<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
            						<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
            						<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground" EndPoint="0,1" StartPoint="0,0">
            	<GradientStop Color="white" Offset="0"/>
            	<GradientStop Color="#B8E2F9" Offset="0.5"/>
            	<GradientStop Color="#B0DFF8" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground" EndPoint="0,1" StartPoint="0,0">
            	<GradientStop Color="#B8E4FA" Offset="0.25"/>
            	<GradientStop Color="#5EB4E3" Offset="0.5"/>
            	<GradientStop Color="#4C8BB4" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground" EndPoint="0,1" StartPoint="0,0">
            	<GradientStop Color="White" Offset="0"/>
            	<GradientStop Color="#F0EFEF" Offset="0.4"/>
            	<GradientStop Color="#D6D5D5" Offset=".8"/>
            </LinearGradientBrush>
            <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="Height" Value="18"/>
            	<Setter Property="Width" Value="10"/>
            	<Setter Property="Foreground" Value="Gray"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Thumb}">
            				<Canvas SnapsToDevicePixels="true">
            					<Canvas.RenderTransform>
            						<TranslateTransform X="5" Y="9"/>
            					</Canvas.RenderTransform>
            					<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="#FF479BFF"/>
            					<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="Black" StrokeThickness="1" />
            					<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="Black" StrokeThickness="1"/>
            				</Canvas>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="Foreground" Value="Blue">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="IsDragging" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
            						<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
            						<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
            						<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            	<Setter Property="Background" Value="#FF5491DA"/>
            </Style>
            <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
            	<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
            	<GradientStop Color="White" Offset=".9"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA"/>
            <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="IsTabStop" Value="false"/>
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type RepeatButton}">
            				<Rectangle Fill="Transparent"/>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
            <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>
            <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="Height" Value="22"/>
            	<Setter Property="Width" Value="11"/>
            	<Setter Property="Foreground" Value="Gray"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Thumb}">
            				<Canvas SnapsToDevicePixels="true">
            					<Canvas.RenderTransform>
            						<TranslateTransform X="5.5" Y="11"/>
            					</Canvas.RenderTransform>
            					<Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackground}"/>
            					<Path x:Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="White"/>
            					<Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" Stroke="#FF929292"/>
            				</Canvas>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="Foreground" Value="Blue">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="IsDragging" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
            						<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
            						<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground" EndPoint="1,0" StartPoint="0,0">
            	<GradientStop Color="white" Offset="0"/>
            	<GradientStop Color="#B8E2F9" Offset="0.5"/>
            	<GradientStop Color="#B0DFF8" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground" EndPoint="1,0" StartPoint="0,0">
            	<GradientStop Color="#B8E4FA" Offset="0.25"/>
            	<GradientStop Color="#5EB4E3" Offset="0.5"/>
            	<GradientStop Color="#4C8BB4" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground" EndPoint="1,0" StartPoint="0,0">
            	<GradientStop Color="White" Offset="0"/>
            	<GradientStop Color="#F0EFEF" Offset="0.4"/>
            	<GradientStop Color="#D6D5D5" Offset=".8"/>
            </LinearGradientBrush>
            <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="Height" Value="10"/>
            	<Setter Property="Width" Value="18"/>
            	<Setter Property="Foreground" Value="Gray"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Thumb}">
            				<Canvas SnapsToDevicePixels="true">
            					<Canvas.RenderTransform>
            						<TransformGroup>
            							<TransformGroup.Children>
            								<TransformCollection>
            									<RotateTransform Angle="90"/>
            									<TranslateTransform X="9" Y="5"/>
            								</TransformCollection>
            							</TransformGroup.Children>
            						</TransformGroup>
            					</Canvas.RenderTransform>
            					<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}"/>
            					<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
            					<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
            				</Canvas>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="Foreground" Value="Blue">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="IsDragging" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
            						<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
            						<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            	<GradientStop Color="white" Offset="0"/>
            	<GradientStop Color="#B8E2F9" Offset="0.5"/>
            	<GradientStop Color="#B0DFF8" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            	<GradientStop Color="#B8E4FA" Offset="0.25"/>
            	<GradientStop Color="#5EB4E3" Offset="0.5"/>
            	<GradientStop Color="#4C8BB4" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            	<GradientStop Color="White" Offset="0"/>
            	<GradientStop Color="#F0EFEF" Offset="0.4"/>
            	<GradientStop Color="#D6D5D5" Offset=".8"/>
            </LinearGradientBrush>
            <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="Height" Value="10"/>
            	<Setter Property="Width" Value="18"/>
            	<Setter Property="Foreground" Value="Gray"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Thumb}">
            				<Canvas SnapsToDevicePixels="true">
            					<Canvas.RenderTransform>
            						<TransformGroup>
            							<TransformGroup.Children>
            								<TransformCollection>
            									<RotateTransform Angle="-90"/>
            									<TranslateTransform X="9" Y="5"/>
            								</TransformCollection>
            							</TransformGroup.Children>
            						</TransformGroup>
            					</Canvas.RenderTransform>
            					<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted}"/>
            					<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
            					<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
            				</Canvas>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="Foreground" Value="Blue">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="IsDragging" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
            						<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
            						<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder" EndPoint="1,0" StartPoint="0,0">
            	<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
            	<GradientStop Color="White" Offset=".9"/>
            </LinearGradientBrush>
            <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="Height" Value="11"/>
            	<Setter Property="Width" Value="22"/>
            	<Setter Property="Foreground" Value="Gray"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Thumb}">
            				<Canvas SnapsToDevicePixels="true">
            					<Canvas.RenderTransform>
            						<TransformGroup>
            							<TransformGroup.Children>
            								<TransformCollection>
            									<RotateTransform Angle="90"/>
            									<TranslateTransform X="11" Y="5.5"/>
            								</TransformCollection>
            							</TransformGroup.Children>
            						</TransformGroup>
            					</Canvas.RenderTransform>
            					<Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}"/>
            					<Path x:Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
            					<Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
            				</Canvas>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="Foreground" Value="Blue">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
            					</Trigger>
            					<Trigger Property="IsDragging" Value="true">
            						<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
            						<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
            						<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
            						<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            	<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            	<Setter Property="Background" Value="Transparent"/>
            	<Setter Property="Foreground" Value="#FFC4C4C4"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Slider}">
            				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            					<Grid>
            						<Grid.RowDefinitions>
            							<RowDefinition Height="Auto"/>
            							<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
            							<RowDefinition Height="Auto"/>
            						</Grid.RowDefinitions>
            						<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
            						<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" OpacityMask="#FF075EA6"/>
            						<Border x:Name="TrackBackground" BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}" BorderThickness="1" Background="{DynamicResource HorizontalSliderThumbPressedBackgroundInverted}" CornerRadius="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
            							<Canvas Margin="-6,-1">
            								<Rectangle x:Name="PART_SelectionRange" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Style="{DynamicResource RectangleStyle1}"/>
            							</Canvas>
            						</Border>
            						<Track x:Name="PART_Track" Grid.Row="1">
            							<Track.DecreaseRepeatButton>
            								<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
            							</Track.DecreaseRepeatButton>
            							<Track.IncreaseRepeatButton>
            								<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
            							</Track.IncreaseRepeatButton>
            							<Track.Thumb>
            								<Thumb x:Name="Thumb" Style="{DynamicResource HorizontalSliderDownThumbStyle}" OpacityMask="#FFDE9D2A" SnapsToDevicePixels="True" Margin="0">
            									<Thumb.Foreground>
            										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            											<GradientStop Color="Black" Offset="0"/>
            											<GradientStop Color="White" Offset="1"/>
            										</LinearGradientBrush>
            									</Thumb.Foreground>
            								</Thumb>
            							</Track.Thumb>
            						</Track>
            					</Grid>
            				</Border>
            				<ControlTemplate.Triggers>
            					<Trigger Property="TickPlacement" Value="TopLeft">
            						<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
            						<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
            						<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
            					</Trigger>
            					<Trigger Property="TickPlacement" Value="BottomRight">
            						<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            						<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
            						<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
            					</Trigger>
            					<Trigger Property="TickPlacement" Value="Both">
            						<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
            						<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            					</Trigger>
            					<Trigger Property="IsSelectionRangeEnabled" Value="true">
            						<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            					</Trigger>
            					<Trigger Property="IsKeyboardFocused" Value="true">
            						<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Slider}">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
                                            <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
                                            <Border x:Name="TrackBackground" BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}" BorderThickness="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" Grid.Column="1" CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                                            	<Canvas Margin="-1,-6">
                                            		<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0"/>
                                            	</Canvas>
                                            </Border>
                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
                                                </Track.Thumb>
                                            </Track>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="TickPlacement" Value="TopLeft">
                                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
                                            <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                                        </Trigger>
                                        <Trigger Property="TickPlacement" Value="BottomRight">
                                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}"/>
                                            <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                                        </Trigger>
                                        <Trigger Property="TickPlacement" Value="Both">
                                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="RectangleStyle1" TargetType="{x:Type Rectangle}">
            	<Setter Property="Fill" Value="#FF71EA1E"/>
            </Style>
            <Style x:Key="SliderStyle2" TargetType="{x:Type Slider}">
            	<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            	<Setter Property="Background" Value="Transparent"/>
            	<Setter Property="Foreground" Value="#FFC4C4C4"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Slider}">
            				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            					<Grid>
            						<Grid.RowDefinitions>
            							<RowDefinition Height="Auto"/>
            							<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
            							<RowDefinition Height="Auto"/>
            						</Grid.RowDefinitions>
            						<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
            						<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" OpacityMask="#FF075EA6"/>
            						<Border x:Name="TrackBackground" BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}" BorderThickness="1" Background="{DynamicResource HorizontalSliderThumbPressedBackgroundInverted}" CornerRadius="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
            							<Canvas Margin="-6,-1">
            								<Rectangle x:Name="PART_SelectionRange" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Style="{DynamicResource RectangleStyle1}"/>
            							</Canvas>
            						</Border>
            						<Track x:Name="PART_Track" Grid.Row="1">
            							<Track.DecreaseRepeatButton>
            								<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" Cursor="Arrow"/>
            							</Track.DecreaseRepeatButton>
            							<Track.IncreaseRepeatButton>
            								<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" Cursor="Arrow" Content="" SnapsToDevicePixels="False"/>
            							</Track.IncreaseRepeatButton>
            							<Track.Thumb>
            								<Thumb x:Name="Thumb" Style="{DynamicResource HorizontalSliderDownThumbStyle}" OpacityMask="{x:Null}" SnapsToDevicePixels="True" Margin="0" AllowDrop="True" Cursor="Arrow" BorderBrush="{x:Null}" OverridesDefaultStyle="True" Background="{x:Null}" Foreground="{x:Null}"/>
            							</Track.Thumb>
            						</Track>
            					</Grid>
            				</Border>
            				<ControlTemplate.Triggers>
            					<Trigger Property="TickPlacement" Value="TopLeft">
            						<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
            						<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
            						<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
            					</Trigger>
            					<Trigger Property="TickPlacement" Value="BottomRight">
            						<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            						<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
            						<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
            					</Trigger>
            					<Trigger Property="TickPlacement" Value="Both">
            						<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
            						<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            					</Trigger>
            					<Trigger Property="IsSelectionRangeEnabled" Value="true">
            						<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            					</Trigger>
            					<Trigger Property="IsKeyboardFocused" Value="true">
            						<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Slider}">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
                                            <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
                                            <Border x:Name="TrackBackground" BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}" BorderThickness="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" Grid.Column="1" CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                                            	<Canvas Margin="-1,-6">
                                            		<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0"/>
                                            	</Canvas>
                                            </Border>
                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
                                                </Track.Thumb>
                                            </Track>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="TickPlacement" Value="TopLeft">
                                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
                                            <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                                        </Trigger>
                                        <Trigger Property="TickPlacement" Value="BottomRight">
                                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}"/>
                                            <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                                        </Trigger>
                                        <Trigger Property="TickPlacement" Value="Both">
                                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        	<LinearGradientBrush x:Key="TextBoxBorder" StartPoint="0,0" MappingMode="Absolute" EndPoint="0,20">
        		<GradientStop Color="#ABADB3" Offset="0.05"/>
        		<GradientStop Color="#E2E3EA" Offset="0.07"/>
        		<GradientStop Color="#E3E9EF" Offset="1"/>
        	</LinearGradientBrush>
        	<Style x:Key="TextBoxStyle1" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="AllowDrop" Value="true"/>
        		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type TextBox}">
        					<Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
        						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</Themes:ListBoxChrome>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="TextBoxStyle2" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="AllowDrop" Value="true"/>
        		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type TextBox}">
        					<Themes:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true" BorderBrush="Black">
        						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</Themes:ListBoxChrome>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="StackPanelStyle1" TargetType="{x:Type StackPanel}"/>
        	<Style x:Key="StackPanelStyle2" TargetType="{x:Type StackPanel}"/>
        	<Style x:Key="TextBlockStyle1" TargetType="{x:Type TextBlock}">
        		<Setter Property="TextWrapping" Value="NoWrap"/>
        		<Setter Property="TextTrimming" Value="None"/>
				<Setter Property="FontFamily" Value="#Transformers Movie" />
        	</Style>
        	<Style x:Key="TextBoxStyle3" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="AllowDrop" Value="true"/>
        		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type TextBox}">
        					<Themes:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true" BorderBrush="Black">
        						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="3,3,2,3"/>
        					</Themes:ListBoxChrome>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ButtonFocusVisual">
        		<Setter Property="Control.Template">
        			<Setter.Value>
        				<ControlTemplate>
        					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        		<GradientStop Color="#F3F3F3" Offset="0"/>
        		<GradientStop Color="#EBEBEB" Offset="0.5"/>
        		<GradientStop Color="#DDDDDD" Offset="0.5"/>
        		<GradientStop Color="#CDCDCD" Offset="1"/>
        	</LinearGradientBrush>
        	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        	<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Themes:ButtonChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true" BorderBrush="#FF59BDFF" Background="White">
        						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					</Themes:ButtonChrome>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsKeyboardFocused" Value="true">
        							<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
        						</Trigger>
        						<Trigger Property="ToggleButton.IsChecked" Value="true">
        							<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Foreground" Value="#ADADAD"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
        		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Themes:ButtonChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true" BorderBrush="#FFF77474" Background="White">
        						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					</Themes:ButtonChrome>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsKeyboardFocused" Value="true">
        							<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
        						</Trigger>
        						<Trigger Property="ToggleButton.IsChecked" Value="true">
        							<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Foreground" Value="#ADADAD"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
        		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Themes:ButtonChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true" BorderBrush="#FFFFD800" Background="White">
        						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					</Themes:ButtonChrome>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsKeyboardFocused" Value="true">
        							<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
        						</Trigger>
        						<Trigger Property="ToggleButton.IsChecked" Value="true">
        							<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Foreground" Value="#ADADAD"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        	<Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="FontFamily" Value="#Transformers Movie" />
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ListBox}">
        					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
        						<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
        							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        						</ScrollViewer>
        					</Border>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        						</Trigger>
        						<Trigger Property="IsGrouping" Value="false">
        							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF3C7FB1"/>
        	<SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="Transparent"/>
        	<SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#222"/>
        	<SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF526C7B"/>
        	<SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="Transparent"/>
        	<SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF003366"/>
        	<SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="DarkGray"/>
        	<SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="Transparent"/>
        	<SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#666"/>
        	<SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="Transparent"/>
        	<SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="DarkGray"/>
        	<SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#666"/>
        	<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Border Padding="{TemplateBinding Padding}">
        						<Grid Background="Transparent" SnapsToDevicePixels="False">
        							<Grid.RowDefinitions>
        								<RowDefinition Height="19"/>
        								<RowDefinition Height="*"/>
        							</Grid.RowDefinitions>
        							<Grid>
        								<Grid.LayoutTransform>
        									<TransformGroup>
        										<TransformGroup.Children>
        											<TransformCollection>
        												<RotateTransform Angle="-90"/>
        											</TransformCollection>
        										</TransformGroup.Children>
        									</TransformGroup>
        								</Grid.LayoutTransform>
        								<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
        								<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
        							</Grid>
        							<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
        						</Grid>
        					</Border>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsChecked" Value="true">
        							<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        						</Trigger>
        						<Trigger Property="IsMouseOver" Value="true">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        						</Trigger>
        						<Trigger Property="IsPressed" Value="true">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
        							<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Border Padding="{TemplateBinding Padding}">
        						<Grid Background="Transparent" SnapsToDevicePixels="False">
        							<Grid.ColumnDefinitions>
        								<ColumnDefinition Width="19"/>
        								<ColumnDefinition Width="*"/>
        							</Grid.ColumnDefinitions>
        							<Grid>
        								<Grid.LayoutTransform>
        									<TransformGroup>
        										<TransformGroup.Children>
        											<TransformCollection>
        												<RotateTransform Angle="180"/>
        											</TransformCollection>
        										</TransformGroup.Children>
        									</TransformGroup>
        								</Grid.LayoutTransform>
        								<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
        								<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
        							</Grid>
        							<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
        						</Grid>
        					</Border>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsChecked" Value="true">
        							<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        						</Trigger>
        						<Trigger Property="IsMouseOver" Value="true">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        						</Trigger>
        						<Trigger Property="IsPressed" Value="true">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
        							<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Border Padding="{TemplateBinding Padding}">
        						<Grid Background="Transparent" SnapsToDevicePixels="False">
        							<Grid.RowDefinitions>
        								<RowDefinition Height="19"/>
        								<RowDefinition Height="*"/>
        							</Grid.RowDefinitions>
        							<Grid>
        								<Grid.LayoutTransform>
        									<TransformGroup>
        										<TransformGroup.Children>
        											<TransformCollection>
        												<RotateTransform Angle="90"/>
        											</TransformCollection>
        										</TransformGroup.Children>
        									</TransformGroup>
        								</Grid.LayoutTransform>
        								<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
        								<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
        							</Grid>
        							<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
        						</Grid>
        					</Border>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsChecked" Value="true">
        							<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        						</Trigger>
        						<Trigger Property="IsMouseOver" Value="true">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        						</Trigger>
        						<Trigger Property="IsPressed" Value="true">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
        							<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ExpanderHeaderFocusVisual">
        		<Setter Property="Control.Template">
        			<Setter.Value>
        				<ControlTemplate>
        					<Border>
        						<Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
        					</Border>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Border Padding="{TemplateBinding Padding}">
        						<Grid Background="Transparent" SnapsToDevicePixels="False">
        							<Grid.ColumnDefinitions>
        								<ColumnDefinition Width="19"/>
        								<ColumnDefinition Width="*"/>
        							</Grid.ColumnDefinitions>
        							<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19" Stroke="Black" StrokeThickness="2"/>
        							<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" StrokeThickness="3" VerticalAlignment="Center" Stroke="#FF7175FF"/>
        							<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
        						</Grid>
        					</Border>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsChecked" Value="true">
        							<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        						</Trigger>
        						<Trigger Property="IsMouseOver" Value="true">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        						</Trigger>
        						<Trigger Property="IsPressed" Value="true">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
        							<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
        							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
        							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="Background" Value="Transparent"/>
        		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
        		<Setter Property="BorderBrush" Value="Transparent"/>
        		<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="FontFamily" Value="#Transformers Movie" />
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Expander}">
        					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
        						<DockPanel>
        							<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        							<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        						</DockPanel>
        					</Border>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsExpanded" Value="true">
        							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
        						</Trigger>
        						<Trigger Property="ExpandDirection" Value="Right">
        							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
        							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
        							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
        						</Trigger>
        						<Trigger Property="ExpandDirection" Value="Up">
        							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
        							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
        							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
        						</Trigger>
        						<Trigger Property="ExpandDirection" Value="Left">
        							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
        							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
        							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
        		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Themes:ButtonChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true" BorderBrush="Black" Background="#FF757575">
        						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					</Themes:ButtonChrome>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsKeyboardFocused" Value="true">
        							<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
        						</Trigger>
        						<Trigger Property="ToggleButton.IsChecked" Value="true">
        							<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Foreground" Value="#ADADAD"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        </ResourceDictionary>
    </Window.Resources>
	<Grid x:Name="GridMain" Margin="0" d:LayoutOverrides="HorizontalAlignment" >
		<Grid.ColumnDefinitions>
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>
        <Grid x:Name="LayoutMain" Background="Black" MouseEnter="Grid_MouseEnter" MouseLeftButtonDown="Media_FullScreen" MouseLeave="Grid_MouseLeave" MouseMove="Visibility_move" AllowDrop="True" DragEnter="MediaLec_DragEnter" Drop="MediaLec_Drop" Margin="250,0">
			<MediaElement x:Name="MediaLec" LoadedBehavior="Manual" AllowDrop="True" MediaOpened="Event_MediaOpened" MediaEnded="Event_MediaEnded" />
			<Grid x:Name="LayoutCommand" Height="100" VerticalAlignment="Bottom" Width="430" Opacity="1" Margin="0">
				<Rectangle HorizontalAlignment="Left" Height="100" StrokeThickness="2.0" VerticalAlignment="Top" Width="430" Fill="Black" Opacity="0.2" Stroke="#FF0057F5"/>
				<Slider x:Name="SliderMain" VerticalAlignment="Top" ValueChanged="SliderMain_Timer" IsMoveToPointEnabled="true" Cursor="None" HorizontalAlignment="Right" Width="430" Background="{x:Null}" ClipToBounds="True" Style="{DynamicResource SliderStyle2}" />
				<Image x:Name="ButtonPlay" Height="50" Margin="0" VerticalAlignment="Bottom" d:LayoutOverrides="Height" Source="Play.png" RenderTransformOrigin="0.046,0.214" Width="50" HorizontalAlignment="Center" MouseDown="Play_Click"/>
				<Image x:Name="ButtonStop" HorizontalAlignment="Center" Width="50" Source="Stop.png" Height="50" VerticalAlignment="Bottom" Margin="0,0,113.8,0" MouseDown="Stop_Click"/>
				<Slider x:Name="SliderVol" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="100" Height="25" Margin="330,0,0,10" IsMoveToPointEnabled="true" Style="{DynamicResource SliderStyle2}"/>
				<Button x:Name="Open" Content="Open" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="50" Margin="370,0,10,40" Click="Open_Click" Style="{DynamicResource ButtonStyle4}" FontFamily="/WMPWindow;component/#Transformers Movie"/>
				<TextBlock x:Name="TimeText" TextWrapping="Wrap" Text="00:00:00" VerticalAlignment="Top" Margin="0,16,0,0" HorizontalAlignment="Center" RenderTransformOrigin="0.324,0.499" Foreground="WhiteSmoke" Style="{DynamicResource TextBlockStyle1}"/>
				<TextBlock x:Name="FullTimeText" HorizontalAlignment="Right" Margin="0,16,10,0" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" Style="{DynamicResource TextBlockStyle1}"><Run Language="fr-fr" Text="00:00:00"/></TextBlock>
				<Image x:Name="ButtonNext" HorizontalAlignment="Center" Height="50" Margin="0,0,-100,0" VerticalAlignment="Bottom" Width="50" Source="Next.png" MouseDown="Next_Click"/>
				<Image x:Name="ButtonPrev" HorizontalAlignment="Center" Height="50" Margin="0,0,220,0" VerticalAlignment="Bottom" Width="50" Source="Back.png" MouseDown="Prev_Click"/>
			</Grid>
		</Grid>
		<StackPanel x:Name="Multimedia" Background="#FFBBBBBB" HorizontalAlignment="Left" Style="{DynamicResource StackPanelStyle2}" Width="250">
			<TextBox x:Name="Search" Height="24.8" TextWrapping="Wrap" Width="230" HorizontalAlignment="Left" VerticalAlignment="Top" KeyDown="OnKeyDownHandler" Style="{DynamicResource TextBoxStyle2}" Margin="10,5,0,0" RenderTransformOrigin="0.506,0.891" BorderThickness="2" Background="White" />
			<Expander x:Name="Video" Header="Video" Margin="0,20,0,0" Style="{DynamicResource ExpanderStyle1}">
				<Expander.Background>
					<ImageBrush/>
				</Expander.Background>
				<ListBox x:Name="VideoList" Margin="40,0,10,0" />
			</Expander>
			<Expander x:Name="Music" Header="Music" Style="{DynamicResource ExpanderStyle1}" Margin="0,10,0,0">
				<Expander.Background>
					<ImageBrush/>
				</Expander.Background>
				<ListBox x:Name="MusicList" Margin="40,0,10,0"/>
			</Expander>
			<Expander x:Name="Image" Header="Image" Style="{DynamicResource ExpanderStyle1}" Margin="0,10,0,0">
				<Expander.Background>
					<ImageBrush/>
				</Expander.Background>
				<ListBox x:Name="ImageList" Margin="40,0,10,0"/>
			</Expander>
		</StackPanel>
		<Grid x:Name="PlaylistManager" HorizontalAlignment="Right" Background="#FF535353" Width="250">
			<ListBox x:Name="PlaylistBox" Margin="0,24,0,33.96" DragEnter="PlaylistBox_DragEnter" Drop="PlaylistBox_Drop" AllowDrop="True" Background="#FFB6B6B6" Style="{DynamicResource ListBoxStyle1}"/>
			<Button x:Name="Add" Content="+" Margin="0,0,61,5" VerticalAlignment="Bottom" RenderTransformOrigin="-0.887,-2.774" HorizontalAlignment="Right" Width="22" Click="Add_Click" Style="{DynamicResource ButtonStyle1}" FontWeight="Bold"/>
			<Button x:Name="Remove" Content="-" Margin="194,0,34,5" VerticalAlignment="Bottom" Width="22" RenderTransformOrigin="0.937,0.399" Click="Remove_Click" Style="{DynamicResource ButtonStyle2}" FontWeight="Bold"/>
			<Button x:Name="Enter" Content="&gt;" Margin="0,0,7,5" VerticalAlignment="Bottom" Width="22" HorizontalAlignment="Right" Click="Enter_Click" Style="{DynamicResource ButtonStyle3}" FontWeight="Bold"/>
			<TextBlock x:Name="PlaylistTitle" TextWrapping="Wrap" Text="Playlist" VerticalAlignment="Top" Width="250" Height="20" HorizontalAlignment="Center" FontSize="16" TextAlignment="Center" Background="#FF818181" Foreground="#FF110F0F" Style="{DynamicResource TextBlockStyle1}"/>
			<TextBox x:Name="PlaylistName" TextWrapping="Wrap" Width="153" HorizontalAlignment="Left" VerticalAlignment="Bottom" KeyDown="OnKeyDownHandler" Margin="8,0,0,5" Style="{DynamicResource TextBoxStyle3}" BorderThickness="2">
				<TextBox.BorderBrush>
					<LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
						<GradientStop Color="#FFABADB3" Offset="0.05"/>
						<GradientStop Color="#FFE2E3EA" Offset="0.07"/>
						<GradientStop Color="Black" Offset="1"/>
					</LinearGradientBrush>
				</TextBox.BorderBrush>
			</TextBox>
		</Grid>
	</Grid>
</Window>
